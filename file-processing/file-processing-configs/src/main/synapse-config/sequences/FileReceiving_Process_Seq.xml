<?xml version="1.0" encoding="UTF-8"?>
<sequence name="FileReceiving_Process_Seq" trace="disable" xmlns="http://ws.apache.org/ns/synapse">
    <log>
        <property expression="json-eval($.fileName)" name="Name"/>
    </log>
    <!-- 1. Reading the JSON attributes from the request payload; -->
    <property expression="json-eval($.fileName)" name="fileName" scope="default" type="STRING"/>
    <property expression="json-eval($.fileContent)" name="fileContent" scope="default" type="STRING"/>
    <!-- 2. Creating the Payload for a binary payload. -->
    <payloadFactory media-type="xml">
        <format>
            <ns:binary xmlns:ns="http://ws.apache.org/commons/ns/payload">$1</ns:binary>
        </format>
        <args>
            <arg evaluator="xml" expression="$ctx:fileContent"/>
        </args>
    </payloadFactory>
    <!-- 3. Even using a binary payload, the Axis2 frameworks keeps considering 
		the payload as text. We use a script mediator to set the fist node as binary; -->
    <script language="js"><![CDATA[var binaryNode =       
      mc.getEnvelope().getBody().getFirstElement().getFirstOMChild();  
   binaryNode.setBinary(true);]]></script>
    <log>
        <property expression="$ctx:fileName" name="fileName"/>
    </log>
    <!-- 4. We set the name of the file that will be saved in the disk using 
		a VFS parameter -->
    <property expression="$ctx:fileName" name="transport.vfs.ReplyFileName" scope="transport" type="STRING"/>
    <log>
        <property expression="$ctx:fileName" name="fileName"/>
    </log>
    <!-- 5. We need to set the OUT_ONLY property and remove the REST_URL_POSTFIX 
		to make the API to be able to save the file and set the expected file name. -->
    <property name="OUT_ONLY" scope="default" type="STRING" value="true"/>
    <property action="remove" name="REST_URL_POSTFIX" scope="axis2"/>
    <!-- 6. We use the call mediator in order to invoke a vfs endpoint with 
		the target directory. -->
    <property name="messageType" scope="axis2" type="STRING" value="application/octet-stream"/>
    <call>
        <endpoint>
            <address uri="vfs:file:///home/wso2carbon/wso2mi-4.0.0/repository/data">
                <suspendOnFailure>
                    <initialDuration>-1</initialDuration>
                    <progressionFactor>1</progressionFactor>
                </suspendOnFailure>
                <markForSuspension>
                    <retriesBeforeSuspension>0</retriesBeforeSuspension>
                </markForSuspension>
            </address>
        </endpoint>
    </call>
    <!-- 7. We define a success message to be the respose of the REST API request. -->
    <payloadFactory media-type="json">
        <format>
			{
			"status": "success",
			"statusMessage" : "Image Uploaded"
			}
		</format>
        <args/>
    </payloadFactory>
    <respond/>
</sequence>
